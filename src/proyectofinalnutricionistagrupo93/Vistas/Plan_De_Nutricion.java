/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinalnutricionistagrupo93.Vistas;

import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.objects.NativeArray;
import proyectofinalnutricionistagrupo93.AccesoADatos.Data_Dieta;
import proyectofinalnutricionistagrupo93.AccesoADatos.Data_Pacientes;
import proyectofinalnutricionistagrupo93.Entidades.Dieta;
import proyectofinalnutricionistagrupo93.Entidades.Paciente;

public class Plan_De_Nutricion extends javax.swing.JInternalFrame {

    private DefaultTableModel modeloTabla = new DefaultTableModel();

    protected Paciente paciente = new Paciente(); //Datos del paciente.
    protected Data_Pacientes Data_Pac = new Data_Pacientes(); //Metodos del paciente.
    protected Data_Dieta Data_Dieta = new Data_Dieta();
    protected List<Paciente> listaPaci = new ArrayList<>();
    protected Paciente pacienteActual = null;
    protected Dieta dietaActual = null;

    /**
     * Creates new form Plan_De_Nutricion
     */
    public Plan_De_Nutricion() {
        initComponents();
        ArrayList<Paciente> listaPaci = Data_Pac.listarPacientes();
        cargarDatosPaciente(listaPaci);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtNombrePlan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jcbPacientes = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jtPesoInicial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtPesoObjetivo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jFechaInicial = new com.toedter.calendar.JDateChooser();
        jFechaFinal = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jEstado = new javax.swing.JRadioButton();
        jEliminar = new javax.swing.JButton();
        jGuardar = new javax.swing.JButton();
        jLimpiar = new javax.swing.JButton();
        jSalir = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jtIdPlan = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Plan de Nutricion");

        jLabel1.setText("Nombre del Plan:");

        jLabel2.setText("Paciente:");

        jcbPacientes.setFocusTraversalPolicyProvider(true);
        jcbPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPacientesActionPerformed(evt);
            }
        });

        jLabel3.setText("Peso Inicial:");

        jLabel4.setText("Peso Objetivo:");

        jLabel5.setText("Fecha Inicial:");

        jLabel6.setText("Fecha Final:");

        jLabel7.setText("KG");

        jLabel8.setText("KG");

        jLabel9.setText("Estado:");

        jEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEstadoActionPerformed(evt);
            }
        });

        jEliminar.setText("Eliminar");
        jEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarActionPerformed(evt);
            }
        });

        jGuardar.setText("Guardar");
        jGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGuardarActionPerformed(evt);
            }
        });

        jLimpiar.setText("Nuevo");
        jLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLimpiarActionPerformed(evt);
            }
        });

        jSalir.setText("Salir");
        jSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalirActionPerformed(evt);
            }
        });

        jLabel10.setText("ID de Plan:");

        jtIdPlan.setEnabled(false);
        jtIdPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtIdPlanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbPacientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtNombrePlan)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jEstado)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jtPesoObjetivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                            .addComponent(jtPesoInicial, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)))
                                    .addComponent(jFechaInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(jFechaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                        .addComponent(jSalir)
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(65, 65, 65)
                        .addComponent(jtIdPlan)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtNombrePlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jtIdPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jcbPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtPesoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtPesoObjetivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))
                    .addComponent(jFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEliminar)
                    .addComponent(jGuardar)
                    .addComponent(jLimpiar)
                    .addComponent(jSalir))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarActionPerformed
        if (dietaActual != null) {
            Data_Dieta.eliminarDieta(dietaActual.getIdDieta());
            dietaActual = null;
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(null, "Para eliminar una dieta, el paciente debe tener una");
        }
    }//GEN-LAST:event_jEliminarActionPerformed

    private void jLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_jLimpiarActionPerformed

    private void jSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jSalirActionPerformed


    private void jcbPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPacientesActionPerformed

        int filaseleccionada = jcbPacientes.getSelectedIndex();
        if (filaseleccionada != -1) {
            Paciente p = (Paciente) jcbPacientes.getSelectedItem();
            int idPaciente = p.getIdPaciente();
            cargarDatos(idPaciente);
        }
    }//GEN-LAST:event_jcbPacientesActionPerformed

    private void jEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jEstadoActionPerformed

    private void jtIdPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtIdPlanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtIdPlanActionPerformed

    private void jGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGuardarActionPerformed
        try {
            String nombre = jtNombrePlan.getText();
            Double pesoInicial = Double.parseDouble(jtPesoInicial.getText());
            Double pesoObjetivo = Double.parseDouble(jtPesoObjetivo.getText());
            int pacienteIndex = jcbPacientes.getSelectedIndex();
            java.util.Date fechaFinal = jFechaFinal.getDate();
            Paciente pacienteSeleccionado = (Paciente) jcbPacientes.getItemAt(pacienteIndex);
            LocalDate fechaf = fechaFinal.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            java.util.Date fechaInicial = jFechaInicial.getDate();
            LocalDate fechai = fechaInicial.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            if (nombre.isEmpty() || pesoInicial == null || pesoObjetivo == null || fechaf == null || fechai == null) {
                JOptionPane.showMessageDialog(null, "No puede haber campos vacios.");
                return;
            }

            Boolean estado = jEstado.isSelected();

            if (dietaActual == null) {
                dietaActual = new Dieta(nombre, pacienteSeleccionado.getIdPaciente(), fechai, fechaf, pesoInicial, pesoObjetivo, estado);
                Data_Dieta.agregarDieta(dietaActual);
            } else {
                dietaActual.setNombre(nombre);
                dietaActual.setPesoInicial(pesoInicial);
                dietaActual.setPesoObjetivo(pesoObjetivo);
                dietaActual.setFechaFinal(fechaf);
                dietaActual.setFechaInicial(fechai);
                dietaActual.setEstado(estado);
                Data_Dieta.modificarDieta(dietaActual);
            }
            limpiarCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al guardar Plan de nutricion " + e.getMessage());
        }
    }//GEN-LAST:event_jGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jEliminar;
    private javax.swing.JRadioButton jEstado;
    private com.toedter.calendar.JDateChooser jFechaFinal;
    private com.toedter.calendar.JDateChooser jFechaInicial;
    private javax.swing.JButton jGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jLimpiar;
    private javax.swing.JButton jSalir;
    private javax.swing.JComboBox<Paciente> jcbPacientes;
    private javax.swing.JTextField jtIdPlan;
    private javax.swing.JTextField jtNombrePlan;
    private javax.swing.JTextField jtPesoInicial;
    private javax.swing.JTextField jtPesoObjetivo;
    // End of variables declaration//GEN-END:variables
 private void cargarDatosPaciente(ArrayList<Paciente> listaPaci) {

        for (Paciente p : listaPaci) {
            jcbPacientes.addItem(p);
            //modeloTabla.addRow(new Object[]{paciente.getNombre(), paciente.getPesoActual(), paciente.getPesoDeseado()});
    }}

    private void cargarDatos(int idPaciente) {
        try {
            dietaActual = Data_Dieta.buscarDietaxPaciente(idPaciente);
            if (dietaActual != null) {
                jtNombrePlan.setText(dietaActual.getNombre());
                jtPesoInicial.setText(String.valueOf(dietaActual.getPesoInicial()));
                jtPesoObjetivo.setText(String.valueOf(dietaActual.getPesoObjetivo()));
                jtIdPlan.setText(String.valueOf(dietaActual.getIdDieta()));
                //no se si funciona 

                LocalDate fi = dietaActual.getFechaInicial();
                java.util.Date datei = java.util.Date.from(fi.atStartOfDay(ZoneId.systemDefault()).toInstant());
                jFechaInicial.setDate(datei);
                LocalDate ff = dietaActual.getFechaFinal();
                java.util.Date datef = java.util.Date.from(ff.atStartOfDay(ZoneId.systemDefault()).toInstant());
                jFechaFinal.setDate(datef);

                jEstado.setSelected(true);
                jEstado.setEnabled(true);
            } else {
                jtNombrePlan.setEnabled(true);
                jEstado.setSelected(false);
                jEstado.setEnabled(true);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos de pacientes y dietas. " + e.getMessage());
        }
    }

    private void limpiarCampos() {
        jtNombrePlan.setText("");
        jtIdPlan.setText("");
        jtPesoObjetivo.setText("");
        jtPesoInicial.setText("");
        jFechaFinal.setDate(null);
        jFechaInicial.setDate(null);
        jEstado.setSelected(true);
    }
}
